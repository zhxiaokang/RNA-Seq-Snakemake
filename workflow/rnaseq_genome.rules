configfile: "./configs/config_BaP-EE2_newGenome.yaml"

samples = config["SAMPLES"]

rule all:
    input:
        final = expand(config["PATHPREFIX"] + "bamFile/{sample}.bam", sample = samples)

rule indexGenome:
    input:
        genome = config["GENOME"]
    output:
        indexes = config["PATHPREFIX"] + "indexes/index.{id}.ht2"
    params:
        index = config["PATHPREFIX"] + "indexes/index"
    benchmark:
        config["PATHPREFIX"] + "benchmarks/{id}.indexGenome.txt"
    shell:
        "hisat2-build -p {config[NCORE]} {input.genome} {params.index}"

rule getReads:
    input:
        key = config["KEY"]
    output:
        forward = temp(config["PATHPREFIX"] + "reads/{sample}_forward.fastq"),
        reverse = temp(config["PATHPREFIX"] + "reads/{sample}_reverse.fastq")
    benchmark:
        config["PATHPREFIX"] + "benchmarks/getReads.{sample}.txt"
    run:
        shell("scp -i {input.key} {config[NELSIN]}/{wildcards.sample}_S*_R1_001.fastq {output.forward}")
        shell("scp -i {input.key} {config[NELSIN]}/{wildcards.sample}_S*_R2_001.fastq {output.reverse}")

rule alignment:
    input:
        index = config["PATHPREFIX"] + "indexes/index.1.ht2",
        forward = config["PATHPREFIX"] + "reads/{sample}_forward.fastq",
        reverse = config["PATHPREFIX"] + "reads/{sample}_reverse.fastq"
    output:
        sam = config["PATHPREFIX"] + "samFile/{sample}.sam",
        bam = config["PATHPREFIX"] + "bamFile/{sample,\d}.bam"
    params:
        index = config["PATHPREFIX"] + "indexes/index"
    benchmark:
        config["PATHPREFIX"] + "benchmarks/alignment.{sample}.txt"
    shell:
        "hisat2 -p {config[NCORE]} -x {params.index} -1 {input.forward} -2 {input.reverse} -S {output.sam}"
        " && samtools view -b -S {output.sam} > {output.bam}"
